// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::driveSubFL_Motor;
std::shared_ptr<SpeedController> RobotMap::driveSubFR_Motor;
std::shared_ptr<SpeedController> RobotMap::driveSubBL_Motor;
std::shared_ptr<SpeedController> RobotMap::driveSubBR_Motor;
std::shared_ptr<RobotDrive> RobotMap::driveSubRobotDrive41;
std::shared_ptr<SpeedController> RobotMap::shooterSubShooter_Motor;
std::shared_ptr<SpeedController> RobotMap::winchSubWinch_Motor;
std::shared_ptr<SpeedController> RobotMap::pickerSubPicker_Motor;
std::shared_ptr<Servo> RobotMap::CamSubbottomServo_Motor;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    driveSubFL_Motor.reset(new Talon(0));
    lw->AddActuator("DriveSub", "FL_Motor", std::static_pointer_cast<Talon>(driveSubFL_Motor));
    
    driveSubFR_Motor.reset(new Talon(1));
    lw->AddActuator("DriveSub", "FR_Motor", std::static_pointer_cast<Talon>(driveSubFR_Motor));
    
    driveSubBL_Motor.reset(new Talon(2));
    lw->AddActuator("DriveSub", "BL_Motor", std::static_pointer_cast<Talon>(driveSubBL_Motor));
    
    driveSubBR_Motor.reset(new Talon(3));
    lw->AddActuator("DriveSub", "BR_Motor", std::static_pointer_cast<Talon>(driveSubBR_Motor));
    
    driveSubRobotDrive41.reset(new RobotDrive(driveSubFL_Motor, driveSubFR_Motor,
              driveSubBL_Motor, driveSubBR_Motor));
    
    driveSubRobotDrive41->SetSafetyEnabled(false);
        driveSubRobotDrive41->SetExpiration(0.1);
        driveSubRobotDrive41->SetSensitivity(0.5);
        driveSubRobotDrive41->SetMaxOutput(1.0);

    shooterSubShooter_Motor.reset(new Talon(4));
    lw->AddActuator("ShooterSub", "Shooter_Motor", std::static_pointer_cast<Talon>(shooterSubShooter_Motor));
    
    winchSubWinch_Motor.reset(new Talon(5));
    lw->AddActuator("WinchSub", "Winch_Motor", std::static_pointer_cast<Talon>(winchSubWinch_Motor));
    
    pickerSubPicker_Motor.reset(new Talon(6));
    lw->AddActuator("PickerSub", "Picker_Motor", std::static_pointer_cast<Talon>(pickerSubPicker_Motor));
    
    CamSubbottomServo_Motor.reset(new Servo(7));
    lw->AddActuator("CamSub", "bottomServo_Motor", std::static_pointer_cast<Servo>(CamSubbottomServo_Motor));

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
