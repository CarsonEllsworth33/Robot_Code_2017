// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ShooterCom.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

ShooterCom::ShooterCom(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::shooterSub.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	RBPressed = false;
	RTrigger = 0;
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void ShooterCom::Initialize() {
	RBPressed = false;
	RTrigger = 0;
}

// Called repeatedly when this Command is scheduled to run
void ShooterCom::Execute() {
	RBPressed = Robot::oi->getDriverJoystick()->GetRawButton(6);
	RTrigger = Robot::oi->getDriverJoystick()->GetRawAxis(3);

	if(RTrigger > -0.20 && RTrigger < 0.20){
		RTrigger = 0;
	}
	else{
		RTrigger = RTrigger * fabs(RTrigger);
	}

	if(RTrigger >= .21){
		Robot::shooterSub->Shoot(-.5);//-1 is correct direction for shooting
	}
	else if(RBPressed){
		Robot::shooterSub->Shoot(.5);
	}//end of if
	else {
		Robot::shooterSub->Shoot(0);
	}//end of else

}

// Make this return true when this Command no longer needs to run execute()
bool ShooterCom::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void ShooterCom::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ShooterCom::Interrupted() {

}
